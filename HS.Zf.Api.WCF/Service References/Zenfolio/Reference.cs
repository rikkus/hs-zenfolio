//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.Xml.Serialization;

namespace HS.Zf.Api.Zenfolio
{
    [GeneratedCode("System.ServiceModel", "3.0.0.0")]
    [ServiceContract(Namespace = "http://www.zenfolio.com/api/1.1", ConfigurationName = "Zenfolio.ZfApiSoap")]
    public interface ZfApiSoap
    {
        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/GetChallenge", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        AuthChallenge GetChallenge(string loginName);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/PartnerPreAuthenticatePlain", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        string PartnerPreAuthenticatePlain(string loginName, string password);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/PartnerAuthenticate", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        string PartnerAuthenticate(string preAuthToken);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/PartnerCreateUser", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        string PartnerCreateUser(string plan, string userName, string password, string email, string displayName);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/AuthenticatePlain", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        string AuthenticatePlain(string loginName, string password);

        // CODEGEN: Parameter 'challenge' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/Authenticate", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        AuthenticateResponse Authenticate(AuthenticateRequest request);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/LoadPrivateProfile", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        User LoadPrivateProfile();

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/LoadPublicProfile", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        User LoadPublicProfile(string loginName);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/LoadGroupHierarchy", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        Group LoadGroupHierarchy(string loginName);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/LoadGroup", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        Group LoadGroup(int groupId);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/LoadPhotoSet", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        PhotoSet LoadPhotoSet(int photosetId);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/LoadPhoto", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        Photo LoadPhoto(int photoId);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/KeyringAddKeyPlain", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        string KeyringAddKeyPlain(string keyring, int realmId, string password);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/GetCategories", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        Category[] GetCategories();

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/SearchSetByCategory", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        PhotoSetResult SearchSetByCategory(string searchId, PhotoSetType type, SortOrder sortOrder, int categoryCode,
                                           int offset, int limit);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/SearchSetByText", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        PhotoSetResult SearchSetByText(string searchId, PhotoSetType type, SortOrder sortOrder, string query, int offset,
                                       int limit);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/GetPopularSets", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        PhotoSet[] GetPopularSets(PhotoSetType type, int offset, int limit);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/GetRecentSets", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        PhotoSet[] GetRecentSets(PhotoSetType type, int offset, int limit);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/SearchPhotoByCategory", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        PhotoResult SearchPhotoByCategory(string searchId, SortOrder sortOrder, int categoryCode, int offset, int limit);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/SearchPhotoByText", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        PhotoResult SearchPhotoByText(string searchId, SortOrder sortOrder, string query, int offset, int limit);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/GetPopularPhotos", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        Photo[] GetPopularPhotos(int offset, int limit);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/GetRecentPhotos", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        Photo[] GetRecentPhotos(int offset, int limit);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/CreateGroup", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        Group CreateGroup(int parentId, GroupUpdater updater);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/DeleteGroup", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void DeleteGroup(int groupId);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/UpdateGroup", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        Group UpdateGroup(int groupId, GroupUpdater updater);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/CreatePhotoSet", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        PhotoSet CreatePhotoSet(int groupId, PhotoSetType type, PhotoSetUpdater updater);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/DeletePhotoSet", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void DeletePhotoSet(int photoSetId);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/UpdatePhotoSet", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        PhotoSet UpdatePhotoSet(int photoSetId, PhotoSetUpdater updater);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/DeletePhoto", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void DeletePhoto(int photoId);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/UpdatePhoto", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        Photo UpdatePhoto(int photoId, PhotoUpdater updater);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/CollectionAddPhoto", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void CollectionAddPhoto(int collectionId, int photoId);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/CollectionRemovePhoto", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void CollectionRemovePhoto(int collectionId, int photoId);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/UpdatePhotoAccess", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        int UpdatePhotoAccess(int photoId, AccessUpdater updater);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/UpdatePhotoSetAccess", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        int UpdatePhotoSetAccess(int photoSetId, AccessUpdater updater);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/UpdateGroupAccess", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        int UpdateGroupAccess(int groupId, AccessUpdater updater);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/ReorderPhotoSet", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void ReorderPhotoSet(int photoSetId, ShiftOrder shiftOrder);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/MovePhoto", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void MovePhoto(int srcSetId, int photoId, int destSetId, int index);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/RotatePhoto", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        Photo RotatePhoto(int photoId, PhotoRotation rotation);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/SetGroupTitlePhoto", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void SetGroupTitlePhoto(int groupId, int photoId);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/SetPhotoSetTitlePhoto", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void SetPhotoSetTitlePhoto(int photoSetId, int photoId);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/SetPhotoSetFeaturedIndex", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void SetPhotoSetFeaturedIndex(int photoSetId, int index);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/MovePhotoSet", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void MovePhotoSet(int photoSetId, int destGroupId, int index);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/ReorderGroup", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void ReorderGroup(int groupId, GroupShiftOrder shiftOrder);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/ReplacePhoto", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void ReplacePhoto(int originalId, int replacedId);

        [OperationContract(Action = "http://www.zenfolio.com/api/1.1/MoveGroup", ReplyAction = "*")]
        [XmlSerializerFormat()]
        [ServiceKnownType(typeof (GroupElement))]
        void MoveGroup(int groupId, int destGroupId, int index);
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class AuthChallenge : object, INotifyPropertyChanged
    {
        private byte[] challengeField;
        private byte[] passwordSaltField;

        /// <remarks/>
        [XmlElement(DataType = "base64Binary", Order = 0)]
        public byte[] PasswordSalt
        {
            get { return passwordSaltField; }
            set
            {
                passwordSaltField = value;
                RaisePropertyChanged("PasswordSalt");
            }
        }

        /// <remarks/>
        [XmlElement(DataType = "base64Binary", Order = 1)]
        public byte[] Challenge
        {
            get { return challengeField; }
            set
            {
                challengeField = value;
                RaisePropertyChanged("Challenge");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class AccessUpdater : object, INotifyPropertyChanged
    {
        private ApiAccessMask accessMaskField;

        private AccessType accessTypeField;

        private bool isDerivedField;
        private string passwordField;
        private string[] viewersField;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public ApiAccessMask AccessMask
        {
            get { return accessMaskField; }
            set
            {
                accessMaskField = value;
                RaisePropertyChanged("AccessMask");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public string Password
        {
            get { return passwordField; }
            set
            {
                passwordField = value;
                RaisePropertyChanged("Password");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 2)]
        public AccessType AccessType
        {
            get { return accessTypeField; }
            set
            {
                accessTypeField = value;
                RaisePropertyChanged("AccessType");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 3)]
        [XmlArrayItem("Viewer", IsNullable = false)]
        public string[] Viewers
        {
            get { return viewersField; }
            set
            {
                viewersField = value;
                RaisePropertyChanged("Viewers");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 4)]
        public bool IsDerived
        {
            get { return isDerivedField; }
            set
            {
                isDerivedField = value;
                RaisePropertyChanged("IsDerived");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [Flags()]
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public enum ApiAccessMask
    {
        /// <remarks/>
        ProtectAll = 1,

        /// <remarks/>
        NoCollections = 2,

        /// <remarks/>
        None = 4,

        /// <remarks/>
        NoPrivateSearch = 8,

        /// <remarks/>
        NoPublicSearch = 16,

        /// <remarks/>
        NoRecentList = 32,

        /// <remarks/>
        HideDateCreated = 64,

        /// <remarks/>
        HideDateModified = 128,

        /// <remarks/>
        HideDateTaken = 256,

        /// <remarks/>
        ProtectExif = 512,

        /// <remarks/>
        ProtectExtraLarge = 1024,

        /// <remarks/>
        ProtectLarge = 2048,

        /// <remarks/>
        ProtectMedium = 4096,

        /// <remarks/>
        HideMetaData = 8192,

        /// <remarks/>
        ProtectOriginals = 16384,

        /// <remarks/>
        HideUserStats = 32768,

        /// <remarks/>
        HideVisits = 65536,

        /// <remarks/>
        NoPublicGuestbookPosts = 131072,

        /// <remarks/>
        NoPrivateGuestbookPosts = 262144,

        /// <remarks/>
        NoAnonymousGuestbookPosts = 524288,

        /// <remarks/>
        NoPublicComments = 1048576,

        /// <remarks/>
        NoPrivateComments = 2097152,

        /// <remarks/>
        NoAnonymousComments = 4194304,

        /// <remarks/>
        ProtectGuestbook = 8388608,

        /// <remarks/>
        ProtectComments = 16777216,
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public enum AccessType
    {
        /// <remarks/>
        Private,

        /// <remarks/>
        UserList,

        /// <remarks/>
        Password,

        /// <remarks/>
        Public,
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class PhotoUpdater : object, INotifyPropertyChanged
    {
        private string captionField;

        private int[] categoriesField;

        private string copyrightField;

        private string fileNameField;
        private string[] keywordsField;
        private string titleField;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public string Title
        {
            get { return titleField; }
            set
            {
                titleField = value;
                RaisePropertyChanged("Title");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public string Caption
        {
            get { return captionField; }
            set
            {
                captionField = value;
                RaisePropertyChanged("Caption");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 2)]
        [XmlArrayItem("Keyword", IsNullable = false)]
        public string[] Keywords
        {
            get { return keywordsField; }
            set
            {
                keywordsField = value;
                RaisePropertyChanged("Keywords");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 3)]
        [XmlArrayItem("Category", IsNullable = false)]
        public int[] Categories
        {
            get { return categoriesField; }
            set
            {
                categoriesField = value;
                RaisePropertyChanged("Categories");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 4)]
        public string Copyright
        {
            get { return copyrightField; }
            set
            {
                copyrightField = value;
                RaisePropertyChanged("Copyright");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 5)]
        public string FileName
        {
            get { return fileNameField; }
            set
            {
                fileNameField = value;
                RaisePropertyChanged("FileName");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class PhotoSetUpdater : object, INotifyPropertyChanged
    {
        private string captionField;

        private int[] categoriesField;

        private string customReferenceField;
        private string[] keywordsField;
        private string titleField;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public string Title
        {
            get { return titleField; }
            set
            {
                titleField = value;
                RaisePropertyChanged("Title");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public string Caption
        {
            get { return captionField; }
            set
            {
                captionField = value;
                RaisePropertyChanged("Caption");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 2)]
        [XmlArrayItem("Keyword", IsNullable = false)]
        public string[] Keywords
        {
            get { return keywordsField; }
            set
            {
                keywordsField = value;
                RaisePropertyChanged("Keywords");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 3)]
        [XmlArrayItem("Category", IsNullable = false)]
        public int[] Categories
        {
            get { return categoriesField; }
            set
            {
                categoriesField = value;
                RaisePropertyChanged("Categories");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 4)]
        public string CustomReference
        {
            get { return customReferenceField; }
            set
            {
                customReferenceField = value;
                RaisePropertyChanged("CustomReference");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class GroupUpdater : object, INotifyPropertyChanged
    {
        private string captionField;

        private string customReferenceField;
        private string titleField;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public string Title
        {
            get { return titleField; }
            set
            {
                titleField = value;
                RaisePropertyChanged("Title");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public string Caption
        {
            get { return captionField; }
            set
            {
                captionField = value;
                RaisePropertyChanged("Caption");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 2)]
        public string CustomReference
        {
            get { return customReferenceField; }
            set
            {
                customReferenceField = value;
                RaisePropertyChanged("CustomReference");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class PhotoResult : object, INotifyPropertyChanged
    {
        private Photo[] photosField;

        private int totalCountField;

        /// <remarks/>
        [XmlArray(Order = 0)]
        [XmlArrayItem(IsNullable = false)]
        public Photo[] Photos
        {
            get { return photosField; }
            set
            {
                photosField = value;
                RaisePropertyChanged("Photos");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public int TotalCount
        {
            get { return totalCountField; }
            set
            {
                totalCountField = value;
                RaisePropertyChanged("TotalCount");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class Photo : object, INotifyPropertyChanged
    {
        private AccessDescriptor accessDescriptorField;

        private string captionField;
        private int[] categoriesField;
        private string copyrightField;

        private byte[] fileHashField;

        private string fileNameField;

        private int galleryField;

        private bool galleryFieldSpecified;
        private uint heightField;

        private bool heightFieldSpecified;
        private int idField;

        private string[] keywordsField;

        private string mimeTypeField;

        private string originalUrlField;
        private string ownerField;

        private string pageUrlField;
        private long pricingKeyField;

        private bool pricingKeyFieldSpecified;
        private PhotoRotation rotationField;

        private bool rotationFieldSpecified;
        private string sequenceField;
        private int sizeField;

        private bool sizeFieldSpecified;
        private DateTime takenOnField;

        private bool takenOnFieldSpecified;
        private string titleField;
        private DateTime uploadedOnField;

        private bool uploadedOnFieldSpecified;
        private string urlCoreField;
        private int viewsField;

        private bool viewsFieldSpecified;
        private uint widthField;

        private bool widthFieldSpecified;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public int Id
        {
            get { return idField; }
            set
            {
                idField = value;
                RaisePropertyChanged("Id");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public uint Width
        {
            get { return widthField; }
            set
            {
                widthField = value;
                RaisePropertyChanged("Width");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool WidthSpecified
        {
            get { return widthFieldSpecified; }
            set
            {
                widthFieldSpecified = value;
                RaisePropertyChanged("WidthSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 2)]
        public uint Height
        {
            get { return heightField; }
            set
            {
                heightField = value;
                RaisePropertyChanged("Height");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool HeightSpecified
        {
            get { return heightFieldSpecified; }
            set
            {
                heightFieldSpecified = value;
                RaisePropertyChanged("HeightSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 3)]
        public string Sequence
        {
            get { return sequenceField; }
            set
            {
                sequenceField = value;
                RaisePropertyChanged("Sequence");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 4)]
        public AccessDescriptor AccessDescriptor
        {
            get { return accessDescriptorField; }
            set
            {
                accessDescriptorField = value;
                RaisePropertyChanged("AccessDescriptor");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 5)]
        public string Title
        {
            get { return titleField; }
            set
            {
                titleField = value;
                RaisePropertyChanged("Title");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 6)]
        public string Caption
        {
            get { return captionField; }
            set
            {
                captionField = value;
                RaisePropertyChanged("Caption");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 7)]
        public string FileName
        {
            get { return fileNameField; }
            set
            {
                fileNameField = value;
                RaisePropertyChanged("FileName");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 8)]
        public DateTime UploadedOn
        {
            get { return uploadedOnField; }
            set
            {
                uploadedOnField = value;
                RaisePropertyChanged("UploadedOn");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool UploadedOnSpecified
        {
            get { return uploadedOnFieldSpecified; }
            set
            {
                uploadedOnFieldSpecified = value;
                RaisePropertyChanged("UploadedOnSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 9)]
        public DateTime TakenOn
        {
            get { return takenOnField; }
            set
            {
                takenOnField = value;
                RaisePropertyChanged("TakenOn");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool TakenOnSpecified
        {
            get { return takenOnFieldSpecified; }
            set
            {
                takenOnFieldSpecified = value;
                RaisePropertyChanged("TakenOnSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 10)]
        public string Owner
        {
            get { return ownerField; }
            set
            {
                ownerField = value;
                RaisePropertyChanged("Owner");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 11)]
        public int Gallery
        {
            get { return galleryField; }
            set
            {
                galleryField = value;
                RaisePropertyChanged("Gallery");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool GallerySpecified
        {
            get { return galleryFieldSpecified; }
            set
            {
                galleryFieldSpecified = value;
                RaisePropertyChanged("GallerySpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 12)]
        public int Views
        {
            get { return viewsField; }
            set
            {
                viewsField = value;
                RaisePropertyChanged("Views");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool ViewsSpecified
        {
            get { return viewsFieldSpecified; }
            set
            {
                viewsFieldSpecified = value;
                RaisePropertyChanged("ViewsSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 13)]
        public int Size
        {
            get { return sizeField; }
            set
            {
                sizeField = value;
                RaisePropertyChanged("Size");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool SizeSpecified
        {
            get { return sizeFieldSpecified; }
            set
            {
                sizeFieldSpecified = value;
                RaisePropertyChanged("SizeSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 14)]
        public PhotoRotation Rotation
        {
            get { return rotationField; }
            set
            {
                rotationField = value;
                RaisePropertyChanged("Rotation");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool RotationSpecified
        {
            get { return rotationFieldSpecified; }
            set
            {
                rotationFieldSpecified = value;
                RaisePropertyChanged("RotationSpecified");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 15)]
        [XmlArrayItem("Keyword", IsNullable = false)]
        public string[] Keywords
        {
            get { return keywordsField; }
            set
            {
                keywordsField = value;
                RaisePropertyChanged("Keywords");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 16)]
        [XmlArrayItem("Category", IsNullable = false)]
        public int[] Categories
        {
            get { return categoriesField; }
            set
            {
                categoriesField = value;
                RaisePropertyChanged("Categories");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 17)]
        public long PricingKey
        {
            get { return pricingKeyField; }
            set
            {
                pricingKeyField = value;
                RaisePropertyChanged("PricingKey");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool PricingKeySpecified
        {
            get { return pricingKeyFieldSpecified; }
            set
            {
                pricingKeyFieldSpecified = value;
                RaisePropertyChanged("PricingKeySpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 18)]
        public string MimeType
        {
            get { return mimeTypeField; }
            set
            {
                mimeTypeField = value;
                RaisePropertyChanged("MimeType");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 19)]
        public string OriginalUrl
        {
            get { return originalUrlField; }
            set
            {
                originalUrlField = value;
                RaisePropertyChanged("OriginalUrl");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 20)]
        public string UrlCore
        {
            get { return urlCoreField; }
            set
            {
                urlCoreField = value;
                RaisePropertyChanged("UrlCore");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 21)]
        public string Copyright
        {
            get { return copyrightField; }
            set
            {
                copyrightField = value;
                RaisePropertyChanged("Copyright");
            }
        }

        /// <remarks/>
        [XmlElement(DataType = "base64Binary", Order = 22)]
        public byte[] FileHash
        {
            get { return fileHashField; }
            set
            {
                fileHashField = value;
                RaisePropertyChanged("FileHash");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 23)]
        public string PageUrl
        {
            get { return pageUrlField; }
            set
            {
                pageUrlField = value;
                RaisePropertyChanged("PageUrl");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class AccessDescriptor : object, INotifyPropertyChanged
    {
        private ApiAccessMask accessMaskField;
        private AccessType accessTypeField;

        private bool isDerivedField;
        private int realmIdField;

        private string[] viewersField;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public int RealmId
        {
            get { return realmIdField; }
            set
            {
                realmIdField = value;
                RaisePropertyChanged("RealmId");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public AccessType AccessType
        {
            get { return accessTypeField; }
            set
            {
                accessTypeField = value;
                RaisePropertyChanged("AccessType");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 2)]
        public bool IsDerived
        {
            get { return isDerivedField; }
            set
            {
                isDerivedField = value;
                RaisePropertyChanged("IsDerived");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 3)]
        public ApiAccessMask AccessMask
        {
            get { return accessMaskField; }
            set
            {
                accessMaskField = value;
                RaisePropertyChanged("AccessMask");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 4)]
        [XmlArrayItem("Viewer", IsNullable = false)]
        public string[] Viewers
        {
            get { return viewersField; }
            set
            {
                viewersField = value;
                RaisePropertyChanged("Viewers");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public enum PhotoRotation
    {
        /// <remarks/>
        None,

        /// <remarks/>
        Rotate90,

        /// <remarks/>
        Rotate180,

        /// <remarks/>
        Rotate270,

        /// <remarks/>
        Flip,

        /// <remarks/>
        Rotate90Flip,

        /// <remarks/>
        Rotate180Flip,

        /// <remarks/>
        Rotate270Flip,
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class PhotoSetResult : object, INotifyPropertyChanged
    {
        private PhotoSet[] photoSetsField;

        private int totalCountField;

        /// <remarks/>
        [XmlArray(Order = 0)]
        [XmlArrayItem(IsNullable = false)]
        public PhotoSet[] PhotoSets
        {
            get { return photoSetsField; }
            set
            {
                photoSetsField = value;
                RaisePropertyChanged("PhotoSets");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public int TotalCount
        {
            get { return totalCountField; }
            set
            {
                totalCountField = value;
                RaisePropertyChanged("TotalCount");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class PhotoSet : GroupElement
    {
        private string captionField;
        private int[] categoriesField;

        private DateTime createdOnField;

        private bool createdOnFieldSpecified;

        private int featuredIndexField;

        private bool featuredIndexFieldSpecified;

        private bool isRandomTitlePhotoField;

        private bool isRandomTitlePhotoFieldSpecified;
        private string[] keywordsField;
        private DateTime modifiedOnField;

        private bool modifiedOnFieldSpecified;
        private string pageUrlField;

        private int[] parentGroupsField;
        private long photoBytesField;

        private bool photoBytesFieldSpecified;
        private int photoCountField;

        private bool photoCountFieldSpecified;

        private Photo[] photosField;
        private Photo titlePhotoField;
        private PhotoSetType typeField;

        private bool typeFieldSpecified;

        private string uploadUrlField;
        private int viewsField;

        private bool viewsFieldSpecified;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public string Caption
        {
            get { return captionField; }
            set
            {
                captionField = value;
                RaisePropertyChanged("Caption");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public DateTime CreatedOn
        {
            get { return createdOnField; }
            set
            {
                createdOnField = value;
                RaisePropertyChanged("CreatedOn");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool CreatedOnSpecified
        {
            get { return createdOnFieldSpecified; }
            set
            {
                createdOnFieldSpecified = value;
                RaisePropertyChanged("CreatedOnSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 2)]
        public DateTime ModifiedOn
        {
            get { return modifiedOnField; }
            set
            {
                modifiedOnField = value;
                RaisePropertyChanged("ModifiedOn");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool ModifiedOnSpecified
        {
            get { return modifiedOnFieldSpecified; }
            set
            {
                modifiedOnFieldSpecified = value;
                RaisePropertyChanged("ModifiedOnSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 3)]
        public int PhotoCount
        {
            get { return photoCountField; }
            set
            {
                photoCountField = value;
                RaisePropertyChanged("PhotoCount");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool PhotoCountSpecified
        {
            get { return photoCountFieldSpecified; }
            set
            {
                photoCountFieldSpecified = value;
                RaisePropertyChanged("PhotoCountSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 4)]
        public long PhotoBytes
        {
            get { return photoBytesField; }
            set
            {
                photoBytesField = value;
                RaisePropertyChanged("PhotoBytes");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool PhotoBytesSpecified
        {
            get { return photoBytesFieldSpecified; }
            set
            {
                photoBytesFieldSpecified = value;
                RaisePropertyChanged("PhotoBytesSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 5)]
        public int Views
        {
            get { return viewsField; }
            set
            {
                viewsField = value;
                RaisePropertyChanged("Views");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool ViewsSpecified
        {
            get { return viewsFieldSpecified; }
            set
            {
                viewsFieldSpecified = value;
                RaisePropertyChanged("ViewsSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 6)]
        public PhotoSetType Type
        {
            get { return typeField; }
            set
            {
                typeField = value;
                RaisePropertyChanged("Type");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool TypeSpecified
        {
            get { return typeFieldSpecified; }
            set
            {
                typeFieldSpecified = value;
                RaisePropertyChanged("TypeSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 7)]
        public int FeaturedIndex
        {
            get { return featuredIndexField; }
            set
            {
                featuredIndexField = value;
                RaisePropertyChanged("FeaturedIndex");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool FeaturedIndexSpecified
        {
            get { return featuredIndexFieldSpecified; }
            set
            {
                featuredIndexFieldSpecified = value;
                RaisePropertyChanged("FeaturedIndexSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 8)]
        public Photo TitlePhoto
        {
            get { return titlePhotoField; }
            set
            {
                titlePhotoField = value;
                RaisePropertyChanged("TitlePhoto");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 9)]
        public bool IsRandomTitlePhoto
        {
            get { return isRandomTitlePhotoField; }
            set
            {
                isRandomTitlePhotoField = value;
                RaisePropertyChanged("IsRandomTitlePhoto");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool IsRandomTitlePhotoSpecified
        {
            get { return isRandomTitlePhotoFieldSpecified; }
            set
            {
                isRandomTitlePhotoFieldSpecified = value;
                RaisePropertyChanged("IsRandomTitlePhotoSpecified");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 10)]
        [XmlArrayItem("Id", IsNullable = false)]
        public int[] ParentGroups
        {
            get { return parentGroupsField; }
            set
            {
                parentGroupsField = value;
                RaisePropertyChanged("ParentGroups");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 11)]
        [XmlArrayItem(IsNullable = false)]
        public Photo[] Photos
        {
            get { return photosField; }
            set
            {
                photosField = value;
                RaisePropertyChanged("Photos");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 12)]
        [XmlArrayItem("Keyword", IsNullable = false)]
        public string[] Keywords
        {
            get { return keywordsField; }
            set
            {
                keywordsField = value;
                RaisePropertyChanged("Keywords");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 13)]
        [XmlArrayItem("Category", IsNullable = false)]
        public int[] Categories
        {
            get { return categoriesField; }
            set
            {
                categoriesField = value;
                RaisePropertyChanged("Categories");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 14)]
        public string UploadUrl
        {
            get { return uploadUrlField; }
            set
            {
                uploadUrlField = value;
                RaisePropertyChanged("UploadUrl");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 15)]
        public string PageUrl
        {
            get { return pageUrlField; }
            set
            {
                pageUrlField = value;
                RaisePropertyChanged("PageUrl");
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public enum PhotoSetType
    {
        /// <remarks/>
        Gallery,

        /// <remarks/>
        Collection,
    }

    /// <remarks/>
    [XmlInclude(typeof (Group))]
    [XmlInclude(typeof (PhotoSet))]
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class GroupElement : object, INotifyPropertyChanged
    {
        private AccessDescriptor accessDescriptorField;
        private int groupIndexField;

        private bool groupIndexFieldSpecified;

        private bool hideBrandingField;

        private bool hideBrandingFieldSpecified;
        private int idField;
        private string ownerField;
        private string titleField;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public int Id
        {
            get { return idField; }
            set
            {
                idField = value;
                RaisePropertyChanged("Id");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public int GroupIndex
        {
            get { return groupIndexField; }
            set
            {
                groupIndexField = value;
                RaisePropertyChanged("GroupIndex");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool GroupIndexSpecified
        {
            get { return groupIndexFieldSpecified; }
            set
            {
                groupIndexFieldSpecified = value;
                RaisePropertyChanged("GroupIndexSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 2)]
        public string Title
        {
            get { return titleField; }
            set
            {
                titleField = value;
                RaisePropertyChanged("Title");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 3)]
        public AccessDescriptor AccessDescriptor
        {
            get { return accessDescriptorField; }
            set
            {
                accessDescriptorField = value;
                RaisePropertyChanged("AccessDescriptor");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 4)]
        public string Owner
        {
            get { return ownerField; }
            set
            {
                ownerField = value;
                RaisePropertyChanged("Owner");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 5)]
        public bool HideBranding
        {
            get { return hideBrandingField; }
            set
            {
                hideBrandingField = value;
                RaisePropertyChanged("HideBranding");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool HideBrandingSpecified
        {
            get { return hideBrandingFieldSpecified; }
            set
            {
                hideBrandingFieldSpecified = value;
                RaisePropertyChanged("HideBrandingSpecified");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class Group : GroupElement
    {
        private string captionField;

        private int collectionCountField;

        private bool collectionCountFieldSpecified;
        private DateTime createdOnField;

        private bool createdOnFieldSpecified;
        private GroupElement[] elementsField;

        private int galleryCountField;

        private bool galleryCountFieldSpecified;
        private DateTime modifiedOnField;

        private bool modifiedOnFieldSpecified;
        private string pageUrlField;
        private int[] parentGroupsField;

        private int photoCountField;

        private bool photoCountFieldSpecified;
        private int subGroupCountField;

        private bool subGroupCountFieldSpecified;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public string Caption
        {
            get { return captionField; }
            set
            {
                captionField = value;
                RaisePropertyChanged("Caption");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public DateTime CreatedOn
        {
            get { return createdOnField; }
            set
            {
                createdOnField = value;
                RaisePropertyChanged("CreatedOn");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool CreatedOnSpecified
        {
            get { return createdOnFieldSpecified; }
            set
            {
                createdOnFieldSpecified = value;
                RaisePropertyChanged("CreatedOnSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 2)]
        public DateTime ModifiedOn
        {
            get { return modifiedOnField; }
            set
            {
                modifiedOnField = value;
                RaisePropertyChanged("ModifiedOn");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool ModifiedOnSpecified
        {
            get { return modifiedOnFieldSpecified; }
            set
            {
                modifiedOnFieldSpecified = value;
                RaisePropertyChanged("ModifiedOnSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 3)]
        public int CollectionCount
        {
            get { return collectionCountField; }
            set
            {
                collectionCountField = value;
                RaisePropertyChanged("CollectionCount");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool CollectionCountSpecified
        {
            get { return collectionCountFieldSpecified; }
            set
            {
                collectionCountFieldSpecified = value;
                RaisePropertyChanged("CollectionCountSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 4)]
        public int SubGroupCount
        {
            get { return subGroupCountField; }
            set
            {
                subGroupCountField = value;
                RaisePropertyChanged("SubGroupCount");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool SubGroupCountSpecified
        {
            get { return subGroupCountFieldSpecified; }
            set
            {
                subGroupCountFieldSpecified = value;
                RaisePropertyChanged("SubGroupCountSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 5)]
        public int GalleryCount
        {
            get { return galleryCountField; }
            set
            {
                galleryCountField = value;
                RaisePropertyChanged("GalleryCount");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool GalleryCountSpecified
        {
            get { return galleryCountFieldSpecified; }
            set
            {
                galleryCountFieldSpecified = value;
                RaisePropertyChanged("GalleryCountSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 6)]
        public int PhotoCount
        {
            get { return photoCountField; }
            set
            {
                photoCountField = value;
                RaisePropertyChanged("PhotoCount");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool PhotoCountSpecified
        {
            get { return photoCountFieldSpecified; }
            set
            {
                photoCountFieldSpecified = value;
                RaisePropertyChanged("PhotoCountSpecified");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 7)]
        [XmlArrayItem("Id", IsNullable = false)]
        public int[] ParentGroups
        {
            get { return parentGroupsField; }
            set
            {
                parentGroupsField = value;
                RaisePropertyChanged("ParentGroups");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 8)]
        [XmlArrayItem(typeof (Group), IsNullable = false)]
        [XmlArrayItem(typeof (PhotoSet), IsNullable = false)]
        public GroupElement[] Elements
        {
            get { return elementsField; }
            set
            {
                elementsField = value;
                RaisePropertyChanged("Elements");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 9)]
        public string PageUrl
        {
            get { return pageUrlField; }
            set
            {
                pageUrlField = value;
                RaisePropertyChanged("PageUrl");
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class Category : object, INotifyPropertyChanged
    {
        private int codeField;

        private string displayNameField;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public int Code
        {
            get { return codeField; }
            set
            {
                codeField = value;
                RaisePropertyChanged("Code");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public string DisplayName
        {
            get { return displayNameField; }
            set
            {
                displayNameField = value;
                RaisePropertyChanged("DisplayName");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class Address : object, INotifyPropertyChanged
    {
        private string cityField;
        private string companyNameField;

        private string countryField;

        private string emailField;
        private string faxField;
        private string firstNameField;

        private string lastNameField;

        private string otherField;
        private string phone2Field;
        private string phoneField;
        private string stateField;
        private string street2Field;
        private string streetField;
        private string urlField;
        private string zipField;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public string FirstName
        {
            get { return firstNameField; }
            set
            {
                firstNameField = value;
                RaisePropertyChanged("FirstName");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public string LastName
        {
            get { return lastNameField; }
            set
            {
                lastNameField = value;
                RaisePropertyChanged("LastName");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 2)]
        public string CompanyName
        {
            get { return companyNameField; }
            set
            {
                companyNameField = value;
                RaisePropertyChanged("CompanyName");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 3)]
        public string Street
        {
            get { return streetField; }
            set
            {
                streetField = value;
                RaisePropertyChanged("Street");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 4)]
        public string Street2
        {
            get { return street2Field; }
            set
            {
                street2Field = value;
                RaisePropertyChanged("Street2");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 5)]
        public string City
        {
            get { return cityField; }
            set
            {
                cityField = value;
                RaisePropertyChanged("City");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 6)]
        public string Zip
        {
            get { return zipField; }
            set
            {
                zipField = value;
                RaisePropertyChanged("Zip");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 7)]
        public string State
        {
            get { return stateField; }
            set
            {
                stateField = value;
                RaisePropertyChanged("State");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 8)]
        public string Country
        {
            get { return countryField; }
            set
            {
                countryField = value;
                RaisePropertyChanged("Country");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 9)]
        public string Phone
        {
            get { return phoneField; }
            set
            {
                phoneField = value;
                RaisePropertyChanged("Phone");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 10)]
        public string Phone2
        {
            get { return phone2Field; }
            set
            {
                phone2Field = value;
                RaisePropertyChanged("Phone2");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 11)]
        public string Fax
        {
            get { return faxField; }
            set
            {
                faxField = value;
                RaisePropertyChanged("Fax");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 12)]
        public string Url
        {
            get { return urlField; }
            set
            {
                urlField = value;
                RaisePropertyChanged("Url");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 13)]
        public string Email
        {
            get { return emailField; }
            set
            {
                emailField = value;
                RaisePropertyChanged("Email");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 14)]
        public string Other
        {
            get { return otherField; }
            set
            {
                otherField = value;
                RaisePropertyChanged("Other");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class File : object, INotifyPropertyChanged
    {
        private byte[] fileHashField;
        private uint heightField;
        private int idField;

        private string mimeTypeField;
        private string sequenceField;

        private string urlCoreField;
        private uint widthField;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public int Id
        {
            get { return idField; }
            set
            {
                idField = value;
                RaisePropertyChanged("Id");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public uint Width
        {
            get { return widthField; }
            set
            {
                widthField = value;
                RaisePropertyChanged("Width");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 2)]
        public uint Height
        {
            get { return heightField; }
            set
            {
                heightField = value;
                RaisePropertyChanged("Height");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 3)]
        public string Sequence
        {
            get { return sequenceField; }
            set
            {
                sequenceField = value;
                RaisePropertyChanged("Sequence");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 4)]
        public string MimeType
        {
            get { return mimeTypeField; }
            set
            {
                mimeTypeField = value;
                RaisePropertyChanged("MimeType");
            }
        }

        /// <remarks/>
        [XmlElement(DataType = "base64Binary", Order = 5)]
        public byte[] FileHash
        {
            get { return fileHashField; }
            set
            {
                fileHashField = value;
                RaisePropertyChanged("FileHash");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 6)]
        public string UrlCore
        {
            get { return urlCoreField; }
            set
            {
                urlCoreField = value;
                RaisePropertyChanged("UrlCore");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public partial class User : object, INotifyPropertyChanged
    {
        private decimal balanceField;

        private bool balanceFieldSpecified;
        private string bioField;
        private File bioPhotoField;
        private int collectionCountField;

        private bool collectionCountFieldSpecified;
        private string displayNameField;
        private string domainNameField;
        private DateTime expiresOnField;

        private bool expiresOnFieldSpecified;
        private PhotoSet[] featuredPhotoSetsField;

        private string firstNameField;

        private int galleryCountField;

        private bool galleryCountFieldSpecified;
        private string lastNameField;

        private DateTime lastUpdatedField;

        private bool lastUpdatedFieldSpecified;
        private string loginNameField;

        private Address personalAddressField;
        private long photoBytesField;

        private bool photoBytesFieldSpecified;
        private long photoBytesQuotaField;

        private bool photoBytesQuotaFieldSpecified;
        private int photoCountField;

        private bool photoCountFieldSpecified;
        private string primaryEmailField;
        private Address publicAddressField;

        private PhotoSet[] recentPhotoSetsField;

        private string referralCodeField;
        private Group rootGroupField;

        private long storageQuotaField;

        private bool storageQuotaFieldSpecified;
        private DateTime userSinceField;

        private bool userSinceFieldSpecified;
        private int viewsField;

        private bool viewsFieldSpecified;

        /// <remarks/>
        [XmlElement(Order = 0)]
        public string LoginName
        {
            get { return loginNameField; }
            set
            {
                loginNameField = value;
                RaisePropertyChanged("LoginName");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 1)]
        public string DisplayName
        {
            get { return displayNameField; }
            set
            {
                displayNameField = value;
                RaisePropertyChanged("DisplayName");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 2)]
        public string FirstName
        {
            get { return firstNameField; }
            set
            {
                firstNameField = value;
                RaisePropertyChanged("FirstName");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 3)]
        public string LastName
        {
            get { return lastNameField; }
            set
            {
                lastNameField = value;
                RaisePropertyChanged("LastName");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 4)]
        public string PrimaryEmail
        {
            get { return primaryEmailField; }
            set
            {
                primaryEmailField = value;
                RaisePropertyChanged("PrimaryEmail");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 5)]
        public File BioPhoto
        {
            get { return bioPhotoField; }
            set
            {
                bioPhotoField = value;
                RaisePropertyChanged("BioPhoto");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 6)]
        public string Bio
        {
            get { return bioField; }
            set
            {
                bioField = value;
                RaisePropertyChanged("Bio");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 7)]
        public int Views
        {
            get { return viewsField; }
            set
            {
                viewsField = value;
                RaisePropertyChanged("Views");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool ViewsSpecified
        {
            get { return viewsFieldSpecified; }
            set
            {
                viewsFieldSpecified = value;
                RaisePropertyChanged("ViewsSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 8)]
        public int GalleryCount
        {
            get { return galleryCountField; }
            set
            {
                galleryCountField = value;
                RaisePropertyChanged("GalleryCount");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool GalleryCountSpecified
        {
            get { return galleryCountFieldSpecified; }
            set
            {
                galleryCountFieldSpecified = value;
                RaisePropertyChanged("GalleryCountSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 9)]
        public int CollectionCount
        {
            get { return collectionCountField; }
            set
            {
                collectionCountField = value;
                RaisePropertyChanged("CollectionCount");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool CollectionCountSpecified
        {
            get { return collectionCountFieldSpecified; }
            set
            {
                collectionCountFieldSpecified = value;
                RaisePropertyChanged("CollectionCountSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 10)]
        public int PhotoCount
        {
            get { return photoCountField; }
            set
            {
                photoCountField = value;
                RaisePropertyChanged("PhotoCount");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool PhotoCountSpecified
        {
            get { return photoCountFieldSpecified; }
            set
            {
                photoCountFieldSpecified = value;
                RaisePropertyChanged("PhotoCountSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 11)]
        public long PhotoBytes
        {
            get { return photoBytesField; }
            set
            {
                photoBytesField = value;
                RaisePropertyChanged("PhotoBytes");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool PhotoBytesSpecified
        {
            get { return photoBytesFieldSpecified; }
            set
            {
                photoBytesFieldSpecified = value;
                RaisePropertyChanged("PhotoBytesSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 12)]
        public DateTime UserSince
        {
            get { return userSinceField; }
            set
            {
                userSinceField = value;
                RaisePropertyChanged("UserSince");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool UserSinceSpecified
        {
            get { return userSinceFieldSpecified; }
            set
            {
                userSinceFieldSpecified = value;
                RaisePropertyChanged("UserSinceSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 13)]
        public DateTime LastUpdated
        {
            get { return lastUpdatedField; }
            set
            {
                lastUpdatedField = value;
                RaisePropertyChanged("LastUpdated");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool LastUpdatedSpecified
        {
            get { return lastUpdatedFieldSpecified; }
            set
            {
                lastUpdatedFieldSpecified = value;
                RaisePropertyChanged("LastUpdatedSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 14)]
        public Address PublicAddress
        {
            get { return publicAddressField; }
            set
            {
                publicAddressField = value;
                RaisePropertyChanged("PublicAddress");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 15)]
        public Address PersonalAddress
        {
            get { return personalAddressField; }
            set
            {
                personalAddressField = value;
                RaisePropertyChanged("PersonalAddress");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 16)]
        [XmlArrayItem(IsNullable = false)]
        public PhotoSet[] RecentPhotoSets
        {
            get { return recentPhotoSetsField; }
            set
            {
                recentPhotoSetsField = value;
                RaisePropertyChanged("RecentPhotoSets");
            }
        }

        /// <remarks/>
        [XmlArray(Order = 17)]
        [XmlArrayItem(IsNullable = false)]
        public PhotoSet[] FeaturedPhotoSets
        {
            get { return featuredPhotoSetsField; }
            set
            {
                featuredPhotoSetsField = value;
                RaisePropertyChanged("FeaturedPhotoSets");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 18)]
        public Group RootGroup
        {
            get { return rootGroupField; }
            set
            {
                rootGroupField = value;
                RaisePropertyChanged("RootGroup");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 19)]
        public string ReferralCode
        {
            get { return referralCodeField; }
            set
            {
                referralCodeField = value;
                RaisePropertyChanged("ReferralCode");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 20)]
        public DateTime ExpiresOn
        {
            get { return expiresOnField; }
            set
            {
                expiresOnField = value;
                RaisePropertyChanged("ExpiresOn");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool ExpiresOnSpecified
        {
            get { return expiresOnFieldSpecified; }
            set
            {
                expiresOnFieldSpecified = value;
                RaisePropertyChanged("ExpiresOnSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 21)]
        public decimal Balance
        {
            get { return balanceField; }
            set
            {
                balanceField = value;
                RaisePropertyChanged("Balance");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool BalanceSpecified
        {
            get { return balanceFieldSpecified; }
            set
            {
                balanceFieldSpecified = value;
                RaisePropertyChanged("BalanceSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 22)]
        public string DomainName
        {
            get { return domainNameField; }
            set
            {
                domainNameField = value;
                RaisePropertyChanged("DomainName");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 23)]
        public long StorageQuota
        {
            get { return storageQuotaField; }
            set
            {
                storageQuotaField = value;
                RaisePropertyChanged("StorageQuota");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool StorageQuotaSpecified
        {
            get { return storageQuotaFieldSpecified; }
            set
            {
                storageQuotaFieldSpecified = value;
                RaisePropertyChanged("StorageQuotaSpecified");
            }
        }

        /// <remarks/>
        [XmlElement(Order = 24)]
        public long PhotoBytesQuota
        {
            get { return photoBytesQuotaField; }
            set
            {
                photoBytesQuotaField = value;
                RaisePropertyChanged("PhotoBytesQuota");
            }
        }

        /// <remarks/>
        [XmlIgnore()]
        public bool PhotoBytesQuotaSpecified
        {
            get { return photoBytesQuotaFieldSpecified; }
            set
            {
                photoBytesQuotaFieldSpecified = value;
                RaisePropertyChanged("PhotoBytesQuotaSpecified");
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "3.0.0.0")]
    [MessageContract(WrapperName = "Authenticate", WrapperNamespace = "http://www.zenfolio.com/api/1.1",
        IsWrapped = true)]
    public partial class AuthenticateRequest
    {
        [MessageBodyMember(Namespace = "http://www.zenfolio.com/api/1.1", Order = 0)] [XmlElement(DataType = "base64Binary")] public byte[] challenge;

        [MessageBodyMember(Namespace = "http://www.zenfolio.com/api/1.1", Order = 1)] [XmlElement(DataType = "base64Binary")] public byte[] proof;

        public AuthenticateRequest()
        {
        }

        public AuthenticateRequest(byte[] challenge, byte[] proof)
        {
            this.challenge = challenge;
            this.proof = proof;
        }
    }

    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "3.0.0.0")]
    [MessageContract(WrapperName = "AuthenticateResponse", WrapperNamespace = "http://www.zenfolio.com/api/1.1",
        IsWrapped = true)]
    public partial class AuthenticateResponse
    {
        [MessageBodyMember(Namespace = "http://www.zenfolio.com/api/1.1", Order = 0)] public string AuthenticateResult;

        public AuthenticateResponse()
        {
        }

        public AuthenticateResponse(string AuthenticateResult)
        {
            this.AuthenticateResult = AuthenticateResult;
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public enum SortOrder
    {
        /// <remarks/>
        Date,

        /// <remarks/>
        Popularity,

        /// <remarks/>
        Rank,
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public enum ShiftOrder
    {
        /// <remarks/>
        CreatedAsc,

        /// <remarks/>
        CreatedDesc,

        /// <remarks/>
        TakenAsc,

        /// <remarks/>
        TakenDesc,

        /// <remarks/>
        TitleAsc,

        /// <remarks/>
        TitleDesc,

        /// <remarks/>
        SizeAsc,

        /// <remarks/>
        SizeDesc,

        /// <remarks/>
        FileNameAsc,

        /// <remarks/>
        FileNameDesc,
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4927")]
    [Serializable()]
    [XmlType(Namespace = "http://www.zenfolio.com/api/1.1")]
    public enum GroupShiftOrder
    {
        /// <remarks/>
        CreatedAsc,

        /// <remarks/>
        CreatedDesc,

        /// <remarks/>
        ModifiedAsc,

        /// <remarks/>
        ModifiedDesc,

        /// <remarks/>
        TitleAsc,

        /// <remarks/>
        TitleDesc,

        /// <remarks/>
        GroupsTop,

        /// <remarks/>
        GroupsBottom,
    }

    [GeneratedCode("System.ServiceModel", "3.0.0.0")]
    public interface ZfApiSoapChannel : ZfApiSoap, IClientChannel
    {
    }

    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "3.0.0.0")]
    public partial class ZfApiSoapClient : ClientBase<ZfApiSoap>, ZfApiSoap
    {
        public ZfApiSoapClient()
        {
        }

        public ZfApiSoapClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public ZfApiSoapClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public ZfApiSoapClient(string endpointConfigurationName, EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public ZfApiSoapClient(Binding binding, EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        #region ZfApiSoap Members

        public AuthChallenge GetChallenge(string loginName)
        {
            return base.Channel.GetChallenge(loginName);
        }

        public string PartnerPreAuthenticatePlain(string loginName, string password)
        {
            return base.Channel.PartnerPreAuthenticatePlain(loginName, password);
        }

        public string PartnerAuthenticate(string preAuthToken)
        {
            return base.Channel.PartnerAuthenticate(preAuthToken);
        }

        public string PartnerCreateUser(string plan, string userName, string password, string email, string displayName)
        {
            return base.Channel.PartnerCreateUser(plan, userName, password, email, displayName);
        }

        public string AuthenticatePlain(string loginName, string password)
        {
            return base.Channel.AuthenticatePlain(loginName, password);
        }

        [EditorBrowsable(EditorBrowsableState.Advanced)]
        AuthenticateResponse ZfApiSoap.Authenticate(AuthenticateRequest request)
        {
            return base.Channel.Authenticate(request);
        }

        public User LoadPrivateProfile()
        {
            return base.Channel.LoadPrivateProfile();
        }

        public User LoadPublicProfile(string loginName)
        {
            return base.Channel.LoadPublicProfile(loginName);
        }

        public Group LoadGroupHierarchy(string loginName)
        {
            return base.Channel.LoadGroupHierarchy(loginName);
        }

        public Group LoadGroup(int groupId)
        {
            return base.Channel.LoadGroup(groupId);
        }

        public PhotoSet LoadPhotoSet(int photosetId)
        {
            return base.Channel.LoadPhotoSet(photosetId);
        }

        public Photo LoadPhoto(int photoId)
        {
            return base.Channel.LoadPhoto(photoId);
        }

        public string KeyringAddKeyPlain(string keyring, int realmId, string password)
        {
            return base.Channel.KeyringAddKeyPlain(keyring, realmId, password);
        }

        public Category[] GetCategories()
        {
            return base.Channel.GetCategories();
        }

        public PhotoSetResult SearchSetByCategory(string searchId, PhotoSetType type, SortOrder sortOrder,
                                                  int categoryCode, int offset, int limit)
        {
            return base.Channel.SearchSetByCategory(searchId, type, sortOrder, categoryCode, offset, limit);
        }

        public PhotoSetResult SearchSetByText(string searchId, PhotoSetType type, SortOrder sortOrder, string query,
                                              int offset, int limit)
        {
            return base.Channel.SearchSetByText(searchId, type, sortOrder, query, offset, limit);
        }

        public PhotoSet[] GetPopularSets(PhotoSetType type, int offset, int limit)
        {
            return base.Channel.GetPopularSets(type, offset, limit);
        }

        public PhotoSet[] GetRecentSets(PhotoSetType type, int offset, int limit)
        {
            return base.Channel.GetRecentSets(type, offset, limit);
        }

        public PhotoResult SearchPhotoByCategory(string searchId, SortOrder sortOrder, int categoryCode, int offset,
                                                 int limit)
        {
            return base.Channel.SearchPhotoByCategory(searchId, sortOrder, categoryCode, offset, limit);
        }

        public PhotoResult SearchPhotoByText(string searchId, SortOrder sortOrder, string query, int offset, int limit)
        {
            return base.Channel.SearchPhotoByText(searchId, sortOrder, query, offset, limit);
        }

        public Photo[] GetPopularPhotos(int offset, int limit)
        {
            return base.Channel.GetPopularPhotos(offset, limit);
        }

        public Photo[] GetRecentPhotos(int offset, int limit)
        {
            return base.Channel.GetRecentPhotos(offset, limit);
        }

        public Group CreateGroup(int parentId, GroupUpdater updater)
        {
            return base.Channel.CreateGroup(parentId, updater);
        }

        public void DeleteGroup(int groupId)
        {
            base.Channel.DeleteGroup(groupId);
        }

        public Group UpdateGroup(int groupId, GroupUpdater updater)
        {
            return base.Channel.UpdateGroup(groupId, updater);
        }

        public PhotoSet CreatePhotoSet(int groupId, PhotoSetType type, PhotoSetUpdater updater)
        {
            return base.Channel.CreatePhotoSet(groupId, type, updater);
        }

        public void DeletePhotoSet(int photoSetId)
        {
            base.Channel.DeletePhotoSet(photoSetId);
        }

        public PhotoSet UpdatePhotoSet(int photoSetId, PhotoSetUpdater updater)
        {
            return base.Channel.UpdatePhotoSet(photoSetId, updater);
        }

        public void DeletePhoto(int photoId)
        {
            base.Channel.DeletePhoto(photoId);
        }

        public Photo UpdatePhoto(int photoId, PhotoUpdater updater)
        {
            return base.Channel.UpdatePhoto(photoId, updater);
        }

        public void CollectionAddPhoto(int collectionId, int photoId)
        {
            base.Channel.CollectionAddPhoto(collectionId, photoId);
        }

        public void CollectionRemovePhoto(int collectionId, int photoId)
        {
            base.Channel.CollectionRemovePhoto(collectionId, photoId);
        }

        public int UpdatePhotoAccess(int photoId, AccessUpdater updater)
        {
            return base.Channel.UpdatePhotoAccess(photoId, updater);
        }

        public int UpdatePhotoSetAccess(int photoSetId, AccessUpdater updater)
        {
            return base.Channel.UpdatePhotoSetAccess(photoSetId, updater);
        }

        public int UpdateGroupAccess(int groupId, AccessUpdater updater)
        {
            return base.Channel.UpdateGroupAccess(groupId, updater);
        }

        public void ReorderPhotoSet(int photoSetId, ShiftOrder shiftOrder)
        {
            base.Channel.ReorderPhotoSet(photoSetId, shiftOrder);
        }

        public void MovePhoto(int srcSetId, int photoId, int destSetId, int index)
        {
            base.Channel.MovePhoto(srcSetId, photoId, destSetId, index);
        }

        public Photo RotatePhoto(int photoId, PhotoRotation rotation)
        {
            return base.Channel.RotatePhoto(photoId, rotation);
        }

        public void SetGroupTitlePhoto(int groupId, int photoId)
        {
            base.Channel.SetGroupTitlePhoto(groupId, photoId);
        }

        public void SetPhotoSetTitlePhoto(int photoSetId, int photoId)
        {
            base.Channel.SetPhotoSetTitlePhoto(photoSetId, photoId);
        }

        public void SetPhotoSetFeaturedIndex(int photoSetId, int index)
        {
            base.Channel.SetPhotoSetFeaturedIndex(photoSetId, index);
        }

        public void MovePhotoSet(int photoSetId, int destGroupId, int index)
        {
            base.Channel.MovePhotoSet(photoSetId, destGroupId, index);
        }

        public void ReorderGroup(int groupId, GroupShiftOrder shiftOrder)
        {
            base.Channel.ReorderGroup(groupId, shiftOrder);
        }

        public void ReplacePhoto(int originalId, int replacedId)
        {
            base.Channel.ReplacePhoto(originalId, replacedId);
        }

        public void MoveGroup(int groupId, int destGroupId, int index)
        {
            base.Channel.MoveGroup(groupId, destGroupId, index);
        }

        #endregion

        public string Authenticate(byte[] challenge, byte[] proof)
        {
            var inValue = new AuthenticateRequest();
            inValue.challenge = challenge;
            inValue.proof = proof;
            var retVal = ((ZfApiSoap) (this)).Authenticate(inValue);
            return retVal.AuthenticateResult;
        }
    }
}